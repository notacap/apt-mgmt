# Generated by Django 5.2.3 on 2025-07-13 01:54

from django.db import migrations


def populate_maintenance_categories(apps, schema_editor):
    MaintenanceCategory = apps.get_model('maintenance', 'MaintenanceCategory')
    
    categories = [
        {'name': 'Plumbing', 'description': 'Water leaks, clogs, pipe issues', 'is_emergency': False},
        {'name': 'Electrical', 'description': 'Electrical problems, outlets, lighting', 'is_emergency': False},
        {'name': 'HVAC', 'description': 'Heating, ventilation, air conditioning', 'is_emergency': False},
        {'name': 'Appliances', 'description': 'Refrigerator, stove, dishwasher, washer/dryer', 'is_emergency': False},
        {'name': 'Flooring', 'description': 'Carpet, hardwood, tile issues', 'is_emergency': False},
        {'name': 'Walls & Paint', 'description': 'Wall damage, painting needs', 'is_emergency': False},
        {'name': 'Windows & Doors', 'description': 'Window and door repairs', 'is_emergency': False},
        {'name': 'Locks & Security', 'description': 'Lock changes, security issues', 'is_emergency': False},
        {'name': 'Pest Control', 'description': 'Insect or rodent problems', 'is_emergency': False},
        {'name': 'General Repair', 'description': 'Other maintenance needs', 'is_emergency': False},
        {'name': 'Emergency Plumbing', 'description': 'Burst pipes, major leaks, no water', 'is_emergency': True},
        {'name': 'Emergency Electrical', 'description': 'Power outages, electrical hazards', 'is_emergency': True},
        {'name': 'Emergency HVAC', 'description': 'No heat/AC in extreme weather', 'is_emergency': True},
        {'name': 'Emergency Security', 'description': 'Broken locks, security breaches', 'is_emergency': True},
    ]
    
    for category_data in categories:
        MaintenanceCategory.objects.get_or_create(
            name=category_data['name'],
            defaults={
                'description': category_data['description'],
                'is_emergency': category_data['is_emergency']
            }
        )


def reverse_populate_maintenance_categories(apps, schema_editor):
    MaintenanceCategory = apps.get_model('maintenance', 'MaintenanceCategory')
    MaintenanceCategory.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('maintenance', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(
            populate_maintenance_categories,
            reverse_populate_maintenance_categories
        ),
    ]
